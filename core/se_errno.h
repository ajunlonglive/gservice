/*************************************************************************************
*	自定义异常头文件
*	使用规则:
*		不要引用这个头文件,它是由系统使用的
*		所有自定义函数的返回值都是bool类型
*		所有自定义函数都包含SE_ERROR_CLEAR:标签,以便宏跳转
*		用se_err_throw检查调用自定义函数的返回值
*************************************************************************************/
#ifndef SE_9865489A_AB67_4BE6_9E6D_EF4887EE04A6
#define SE_9865489A_AB67_4BE6_9E6D_EF4887EE04A6
#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include <string.h>
#include "../pg/stringbuilder.h"

/*****************************************************************************
*	保存到错误日志的常用错误消息
*	使用规则:
*		服务启动中调用这些宏,以SE_soap_serve方法为分界线
*		SE_soap_serve方法之前调用的方法使用以下宏
*		所有自定义函数的返回值都是bool类型
*		所有自定义函数都包含SE_ERROR_CLEAR标签,以便宏跳转
*		用se_err_throw检查调用自定义函数的返回值
*		只要返回false就跳转到SE_ERROR_CLEAR处理异常
*****************************************************************************/


/*****************************************************************************
*   验证输入参数是否为NULL指针,如果是直接跳转至异常
*****************************************************************************/
#define SE_validate_para_ptr(ptr,funname,line) do{\
	if (SE_PTR_ISNULL(ptr)){\
		fprintf(stderr,"%s(%d),%s\n", funname, line, strerror(EINVAL));\
		goto SE_ERROR_CLEAR;\
	}\
}while (0)


/*****************************************************************************
*   验证输入参数是否为0,如果是直接跳转至异常
*****************************************************************************/
#define SE_validate_para_zero(para,funname,line) do{\
	if (0==para){\
		fprintf(stderr,"%s(%d),%s\n", funname, line, strerror(EINVAL));\
		goto SE_ERROR_CLEAR;\
	}\
}while (0)

/*****************************************************************************
*   检查是否为空指针,如果是直接跳转至异常
*****************************************************************************/
#define SE_check_nullptr(ptr,format, ...) do{\
	if (SE_PTR_ISNULL(ptr)){\
		fprintf(stderr,format, ##__VA_ARGS__);\
		goto SE_ERROR_CLEAR;\
	}\
}while (0)

/*****************************************************************************
*   检查标准函数返回代码是否正确,如果不正确直接跳转至异常
*****************************************************************************/
#define SE_check_rc(rc,format, ...) do{\
	if (rc){\
		fprintf(stderr,format, ##__VA_ARGS__);\
		goto SE_ERROR_CLEAR;\
	}\
}while (0)

/*****************************************************************************
*   直接跳转换至异常
*****************************************************************************/
#define SE_gotoerr(format, ...) do{\
		fprintf(stderr,format, ##__VA_ARGS__);\
		goto SE_ERROR_CLEAR;\
}while (0)




#endif /*SE_9865489A_AB67_4BE6_9E6D_EF4887EE04A6*/